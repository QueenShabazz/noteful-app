{"ast":null,"code":"var _jsxFileName = \"/Users/queen/Desktop/notefulcli/src/PageMain/PageMain.js\";\nimport React from 'react';\nimport FolderNotes from '../FolderNotes/FolderNotes';\nimport { findNote } from '../notes-helper';\nimport ApiContext from '../ApiContext';\nexport default class PageMain extends React.Component {\n  render() {\n    const {\n      notes = []\n    } = this.context;\n    const note = findNote(notes, this.props.match.params.noteId) || {\n      content: ''\n    };\n    const noteId = this.props.match.params.noteId;\n    return React.createElement(\"section\", {\n      className: \"PageMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(FolderNotes, {\n      params: noteId,\n      id: notes.map(id => id.id),\n      name: notes.map(name => name.name),\n      content: notes.map(content => content.content),\n      modified: notes.map(m => m.modified),\n      onDeleteNote: this.props.onDeleteNote,\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, note.content.split(/\\n \\r|\\n/).map((para, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, para))));\n  }\n\n}\nPageMain.defaultProps = {\n  match: {\n    params: {}\n  }\n};\nPageMain.contextType = ApiContext;","map":{"version":3,"sources":["/Users/queen/Desktop/notefulcli/src/PageMain/PageMain.js"],"names":["React","FolderNotes","findNote","ApiContext","PageMain","Component","render","notes","context","note","props","match","params","noteId","content","map","id","name","m","modified","onDeleteNote","history","split","para","i","defaultProps","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AAWjDC,EAAAA,MAAM,GAAE;AAER,UAAM;AAAEC,MAAAA,KAAK,GAAG;AAAV,QAAiB,KAAKC,OAA5B;AACA,UAAMC,IAAI,GAAGP,QAAQ,CAACK,KAAD,EAAQ,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAhC,CAAR,IACT;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADJ;AAEA,UAAMD,MAAM,GAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAtC;AAEI,WACI;AAAU,MAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAIA,MADZ;AAEE,MAAA,EAAE,EAAEN,KAAK,CAACQ,GAAN,CAAUC,EAAE,IAAGA,EAAE,CAACA,EAAlB,CAFN;AAGE,MAAA,IAAI,EAAET,KAAK,CAACQ,GAAN,CAAUE,IAAI,IAAGA,IAAI,CAACA,IAAtB,CAHR;AAIE,MAAA,OAAO,EAAEV,KAAK,CAACQ,GAAN,CAAUD,OAAO,IAAGA,OAAO,CAACA,OAA5B,CAJX;AAKE,MAAA,QAAQ,EAAEP,KAAK,CAACQ,GAAN,CAAUG,CAAC,IAAGA,CAAC,CAACC,QAAhB,CALZ;AAME,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWU,YAN3B;AAOE,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,OAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,IAAI,CAACK,OAAL,CAAaQ,KAAb,CAAmB,UAAnB,EAA+BP,GAA/B,CAAmC,CAACQ,IAAD,EAAOC,CAAP,KAClC;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAZ,CADD,CADH,CAVF,CADJ;AAkBC;;AApC4C;AAAhCnB,Q,CAEVqB,Y,GAAc;AACjBd,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL;AADU,C;AAFJR,Q,CAQVsB,W,GAAcvB,U","sourcesContent":["import React from 'react';\nimport FolderNotes from '../FolderNotes/FolderNotes'\nimport { findNote } from '../notes-helper'\nimport ApiContext from '../ApiContext'\n\nexport default class PageMain extends React.Component{\n\n    static defaultProps ={\n        match: {\n            params: {}\n        }\n    }\n   \n    static contextType = ApiContext\n\n\n    render(){\n    \n    const { notes = [] } = this.context\n    const note = findNote(notes, this.props.match.params.noteId)\n     || { content: '' }\n    const noteId =this.props.match.params.noteId\n       \n        return (\n            < section className='PageMain' >\n              <FolderNotes\n                params = {noteId}\n                id={notes.map(id=> id.id)}\n                name={notes.map(name=> name.name)}\n                content={notes.map(content=> content.content)}\n                modified={notes.map(m=> m.modified)}\n                onDeleteNote={this.props.onDeleteNote}\n                history={this.props.history}\n              />\n              <div>\n                {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n                  <p key={i}>{para}</p>\n                )}\n              </div>\n            </section >\n          )\n        }\n    }"]},"metadata":{},"sourceType":"module"}