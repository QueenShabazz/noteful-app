{"ast":null,"code":"var _jsxFileName = \"/Users/queen/Desktop/note-test/noteful-client/src/src/AddNote/AddNote.js\";\nimport React from 'react';\nimport Form from \"../Form/Form\";\nimport ApiContext from '../ApiContext';\nimport PropTypes from 'prop-types';\nexport default class AddNote extends React.Component {\n  render() {\n    const {\n      folders\n    } = this.context;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" Create Note\"), React.createElement(Form, {\n      onSubmit: e => {\n        this.props.handleSubmit(e);\n\n        if (this.props.name) {\n          this.props.history.push('/');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-name-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"note-name-input\",\n      value: this.props.name,\n      onChange: this.props.onNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), this.props.nameError), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-content-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      id: \"note-content-input\",\n      value: this.props.content,\n      onChange: this.props.onContentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"note-folder-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Folder\"), React.createElement(\"select\", {\n      id: \"note-folder-select\",\n      value: this.props.folder,\n      onChange: this.props.onfolderChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"...\"), folders.map(folder => React.createElement(\"option\", {\n      key: folder.id,\n      value: folder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, folder.name)))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add Note\")));\n  }\n\n}\nAddNote.defaultProps = {\n  match: {\n    params: {}\n  }\n};\nAddNote.contextType = ApiContext;\nAddNote.propTypes = {\n  handleSubmit: PropTypes.func,\n  onContentChange: PropTypes.func,\n  onNameChange: PropTypes.func,\n  onfolderChange: PropTypes.func,\n  content: PropTypes.string,\n  folder: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/queen/Desktop/note-test/noteful-client/src/src/AddNote/AddNote.js"],"names":["React","Form","ApiContext","PropTypes","AddNote","Component","render","folders","context","e","props","handleSubmit","name","history","push","onNameChange","nameError","content","onContentChange","folder","onfolderChange","map","id","defaultProps","match","params","contextType","propTypes","func","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from \"../Form/Form\"\nimport ApiContext from '../ApiContext'\nimport PropTypes from 'prop-types'\n\nexport default class AddNote extends React.Component{\n\n    static defaultProps={\n        match: {\n            params: {}\n          }\n    }\n    static contextType = ApiContext;\n\n    render(){ \n    const {folders} = this.context\n    return(\n        <section>\n            <h2> Create Note</h2>\n            <Form onSubmit = {e => {\n                this.props.handleSubmit(e)\n                if(this.props.name){\n                    this.props.history.push('/')\n                }\n            }}\n            >\n                <div>\n                    <label htmlFor='note-name-input' >\n                        Name\n                    </label>\n                    <input type='text' id='note-name-input' value={this.props.name} onChange={this.props.onNameChange}\n                    />\n                    {this.props.nameError}\n                </div>\n                <div>\n                    <label htmlFor='note-content-input'>\n                        Content\n                    </label>\n                    <textarea id='note-content-input' value={this.props.content} onChange={this.props.onContentChange} />\n                </div>\n                <div>\n                    <label htmlFor='note-folder-select'>\n                        Folder\n                    </label>\n                    <select id='note-folder-select' value={this.props.folder} onChange={this.props.onfolderChange}>\n                        <option value={null}>...</option>\n                        \n                        {folders.map(folder => \n                            <option key={folder.id} value={folder.id}>\n                            {folder.name}\n                            </option>\n                        )}\n                    </select>\n                </div>\n                <button type='submit'>\n                            Add Note\n                </button>\n            </Form>\n            </section>\n        )\n    }\n}\n\nAddNote.propTypes={\n    handleSubmit: PropTypes.func,\n    onContentChange: PropTypes.func,\n    onNameChange: PropTypes.func,\n    onfolderChange: PropTypes.func,\n    content: PropTypes.string,\n    folder: PropTypes.string.isRequired,\n};"]},"metadata":{},"sourceType":"module"}