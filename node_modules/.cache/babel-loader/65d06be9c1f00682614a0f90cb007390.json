{"ast":null,"code":"var _jsxFileName = \"/Users/queen/Desktop/notefulcli/src/AddFolderError/AddFolderError.js\";\nimport React from 'react';\nexport default class AddFolderError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      hasError: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Something went wrong.\");\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/Users/queen/Desktop/notefulcli/src/AddFolderError/AddFolderError.js"],"names":["React","AddFolderError","Component","constructor","props","state","hasError","errorInfo","getDerivedStateFromError","error","componentDidCatch","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA4C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AACD,SAAOC,wBAAP,CAAgCC,KAAhC,EAAsC;AAClC,WAAM;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAN;AACH;;AACDI,EAAAA,iBAAiB,CAACD,KAAD,EAAQF,SAAR,EAAmB;AAChC,SAAKI,QAAL,CAAc;AACVL,MAAAA,QAAQ,EAAEG,KADA;AAEVF,MAAAA,SAAS,EAAEA;AAFD,KAAd;AAIH;;AACDK,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AAErB;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACP;;AACD,WAAO,KAAKF,KAAL,CAAWS,QAAlB;AACD;;AAxBwD","sourcesContent":["import React from 'react'\n\nexport default class AddFolderError extends React.Component{ \n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: null, \n            errorInfo: null\n        }\n    }      \n    static getDerivedStateFromError(error){\n        return{ hasError: true}\n    }\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            hasError: error,\n            errorInfo: errorInfo\n        })\n    }\n    render(){\n        if (this.state.hasError) {\n            \n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children; \n  }\n}"]},"metadata":{},"sourceType":"module"}