{"ast":null,"code":"var _jsxFileName = \"/Users/queen/Desktop/note-test/noteful-client/src/src/App/App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Note from \"../Note/Note\";\nimport PageMain from \"../PageMain/PageMain\";\nimport NoteList from \"../NoteList/NoteList\";\nimport NoteNav from \"../NoteNav/NoteNav\";\nimport AddFolder from \"../AddFolder/AddFolder\";\nimport AddNote from \"../AddNote/AddNote\";\nimport \"./App.css\";\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport AddFolderError from \"../AddFolderError/AddFolderError\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let nameError = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n      console.log('NAME', this.state.name);\n\n      if (this.state.name === \"\" || this.state.folder === \"\") {\n        nameError = React.createElement(\"p\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" Name required\");\n        this.setState({\n          nameError\n        });\n        return false;\n      }\n\n      this.setState({\n        nameError: ''\n      });\n      return true;\n    };\n\n    this.folderSubmit = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n      console.log('youvalid?', isValid);\n\n      if (this.state.folder) {\n        const folder = {\n          name: this.state.folder\n        };\n        fetch(\"http://localhost:9090/folders\", {\n          method: \"POST\",\n          body: JSON.stringify(folder),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (!res.ok) {\n            throw new Error('Something is wrong, try again');\n          }\n\n          return res.json();\n        }).then(data => {\n          console.log('folderdata', data);\n\n          if (data.name !== \"\") {\n            this.setState({\n              nameError: ''\n            });\n          }\n\n          let newFolder = this.state.folders;\n          newFolder.push(data);\n          this.setState({\n            folders: newFolder\n          });\n        }).catch(error => alert(error));\n      }\n\n      this.setState({\n        folder: ''\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n      console.log('valid?', isValid);\n      console.log('valid--', !isValid);\n\n      if (isValid) {\n        console.log('ERRORS', this.props.nameError);\n      } else {\n        const {\n          name,\n          content,\n          folderId\n        } = this.state;\n        const newNote = {\n          name,\n          content,\n          folderId\n        };\n        console.log('newnote', newNote);\n\n        if (this.state.name === \"\") {\n          this.setState({\n            nameError: \"error!\"\n          });\n        } else {\n          fetch(\"http://localhost:9090/notes\", {\n            method: \"POST\",\n            body: JSON.stringify(newNote),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(res => {\n            if (!res.ok) {\n              throw new Error('Something is wrong, try again');\n            }\n\n            return res.json();\n          }).then(data => {\n            console.log(data, 'newdata');\n            let tempNotes = this.state.notes;\n            tempNotes.push(newNote);\n            this.setState({\n              name: data.name,\n              content: data.content,\n              folderId: data.folderId,\n              notes: tempNotes\n            });\n            this.setState({\n              name: ''\n            });\n          }).catch(error => alert(error));\n        }\n      }\n    };\n\n    this.handleDeleteNote = noteId => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== noteId)\n      });\n    };\n\n    this.state = {\n      notes: [],\n      folders: [],\n      name: '',\n      content: '',\n      folderId: '',\n      folder: '',\n      nameError: ''\n    };\n    this.onNameChange = this.onNameChange.bind(this);\n    this.onContentChange = this.onContentChange.bind(this);\n    this.onfolderChange = this.onfolderChange.bind(this);\n    this.newFolder = this.newFolder.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  newFolder(e) {\n    e.preventDefault();\n    this.setState({\n      folder: e.target.value\n    });\n  }\n\n  onNameChange(e) {\n    e.preventDefault();\n    this.setState({\n      name: e.target.value\n    });\n    console.log('content', this.state.name);\n  }\n\n  onContentChange(e) {\n    e.preventDefault();\n    this.setState({\n      content: e.target.value\n    });\n  }\n\n  onfolderChange(e) {\n    e.preventDefault();\n    this.setState({\n      folderId: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    let fetchData = () => {\n      const endpts = [`${config.API_ENDPOINT}/notes`, `${config.API_ENDPOINT}/folders`]; //map each endpoint to the promise of the fetch\n\n      let requests = endpts.map(endpt => fetch(endpt).then(response => response.json())); //promise.all will wait until all jobs are executed\n\n      return Promise.all(requests);\n    };\n\n    fetchData().then(res => {\n      this.setState({\n        notes: res[0],\n        folders: res[1]\n      });\n    });\n  }\n\n  renderFolder() {\n    const {\n      notes\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      key: \"/\",\n      path: \"/\",\n      component: NoteList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: NoteNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      component: PageMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      key: \"/folder/:folderId\",\n      path: \"/folder/:folderId\",\n      component: NoteList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      component: NoteNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      render: props => React.createElement(NoteNav, Object.assign({}, props, {\n        notes: notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }));\n  }\n\n  renderFolderRoutes() {\n    return React.createElement(React.Fragment, null, React.createElement(Route, {\n      exact: true,\n      key: \"/folder/:folderId\",\n      path: \"/folder/:folderId\",\n      component: Note,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Route, {\n      key: \"/\",\n      exact: true,\n      path: \"/\",\n      component: Note,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-folder\",\n      render: props => React.createElement(AddFolderError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(AddFolder, Object.assign({}, props, {\n        folderSubmit: this.folderSubmit,\n        newFolder: this.newFolder,\n        folder: this.state.folder,\n        nameError: this.state.nameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-note\",\n      render: props => React.createElement(AddNote, Object.assign({}, props, {\n        handleSubmit: this.handleSubmit,\n        onContentChange: this.onContentChange,\n        name: this.state.name,\n        onNameChange: this.onNameChange,\n        content: this.state.content,\n        folder: this.state.folderId,\n        onfolderChange: this.onfolderChange,\n        nameError: this.state.nameError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }));\n  } //second render\n\n\n  render() {\n    // final main render to bring it all together now\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote\n    };\n    return React.createElement(ApiContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"link\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \" \", \"Noteful\"))), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.renderFolder(), this.renderFolderRoutes())));\n  }\n\n}","map":{"version":3,"sources":["/Users/queen/Desktop/note-test/noteful-client/src/src/App/App.js"],"names":["React","Component","Route","Link","Note","PageMain","NoteList","NoteNav","AddFolder","AddNote","ApiContext","config","AddFolderError","App","constructor","props","validate","nameError","console","log","state","name","folder","color","setState","folderSubmit","e","preventDefault","isValid","fetch","method","body","JSON","stringify","headers","then","res","ok","Error","json","data","newFolder","folders","push","catch","error","alert","handleSubmit","content","folderId","newNote","tempNotes","notes","handleDeleteNote","noteId","filter","note","id","onNameChange","bind","onContentChange","onfolderChange","target","value","componentDidMount","fetchData","endpts","API_ENDPOINT","requests","map","endpt","response","Promise","all","renderFolder","renderFolderRoutes","render","deleteNote"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Note from \"../Note/Note\";\nimport PageMain from \"../PageMain/PageMain\"\nimport NoteList from \"../NoteList/NoteList\";\nimport NoteNav from \"../NoteNav/NoteNav\";\nimport AddFolder from \"../AddFolder/AddFolder\"\nimport AddNote from \"../AddNote/AddNote\"\nimport \"./App.css\";\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport AddFolderError from \"../AddFolderError/AddFolderError\"\n\n\nexport default class App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      notes: [],\n      folders: [],\n      name: '',\n      content: '',\n      folderId: '',\n      folder: '',\n      nameError:'', \n    };\n    this.onNameChange= this.onNameChange.bind(this);\n    this.onContentChange= this.onContentChange.bind(this);\n    this.onfolderChange= this.onfolderChange.bind(this)\n    this.newFolder=this.newFolder.bind(this)\n    this.validate=this.validate.bind(this)\n  }\n  newFolder(e){\n    e.preventDefault()\n    this.setState({\n      folder: e.target.value\n    })\n  }\n  onNameChange(e){\n    e.preventDefault()\n    this.setState({\n        name: e.target.value\n    })\n    console.log('content', this.state.name)\n  }  \n  onContentChange(e){\n    e.preventDefault()\n    this.setState({\n        content: e.target.value\n    }\n    )\n  }  \n  onfolderChange(e){\n    e.preventDefault()\n    this.setState({\n        folderId: e.target.value\n    })\n  }\n  \n  componentDidMount() {\n    let fetchData = () => {\n      const endpts = [\n        `${config.API_ENDPOINT}/notes`,\n        `${config.API_ENDPOINT}/folders`\n      ];\n      //map each endpoint to the promise of the fetch\n      let requests = endpts.map(endpt=>\n        fetch(endpt)\n        .then(response => response.json())\n        );\n      //promise.all will wait until all jobs are executed\n      return Promise.all(requests)\n\n    }\n    fetchData().then(res=>{\n      this.setState({\n        notes: res[0],\n        folders: res[1],\n      })\n \n    })\n  }\n\n\nvalidate = () => {\n  let nameError = <p></p>;\n  console.log('NAME', this.state.name)\n  if(this.state.name===\"\" || this.state.folder===\"\"){\n    nameError = <p style={{color:'red'}}> Name required</p> \n    this.setState({nameError});\n    return false\n  }\n  this.setState({nameError:''});\n  return true\n}\n\nfolderSubmit = (e) =>{\n  e.preventDefault();\n  const isValid = this.validate();\n  console.log('youvalid?', isValid)\n  if(this.state.folder){\n    const folder = {name: this.state.folder};\n    fetch(\"http://localhost:9090/folders\", {\n        method: \"POST\",\n        body: JSON.stringify(folder),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error ('Something is wrong, try again')\n        }\n        return res.json()\n      })\n      .then(data => {\n        console.log('folderdata', data)\n        if(data.name !==\"\"){\n          this.setState({nameError:''})\n        }\n        let newFolder= this.state.folders\n        newFolder.push(data)\n        this.setState({folders: newFolder})\n      })\n      \n      .catch(error => alert(error))\n    }\n    this.setState({folder:''})\n    \n    \n  }\n\n \n\nhandleSubmit = (e) => {\n  e.preventDefault();\n  const isValid = this.validate();\n  console.log('valid?', isValid)\n  console.log('valid--', !isValid)\n  if(isValid){\n    console.log('ERRORS', this.props.nameError)\n  }\n  else{\n  const {name, content,folderId} = this.state;\n  const newNote = {name, content,folderId}\n  console.log('newnote', newNote)\n    if(this.state.name===\"\"){\n      this.setState({nameError:\"error!\"})\n    } else{\n  fetch(\"http://localhost:9090/notes\", {\n      method: \"POST\",\n      body: JSON.stringify(newNote),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw new Error ('Something is wrong, try again')\n      }\n      return res.json()\n    })\n    \n    .then(data => {\n            console.log(data, 'newdata')\n      let tempNotes= this.state.notes\n      tempNotes.push(newNote)\n      this.setState({\n          name: data.name,\n          content: data.content,\n          folderId: data.folderId,\n          notes: tempNotes\n      });\n      this.setState({name:''})\n     \n    })\n    .catch(error => alert(error)\n    )}}\n  }\n\n\nhandleDeleteNote = (noteId) => {\n  this.setState({\n    notes: this.state.notes.filter(note=> note.id !== noteId)\n  });\n};\n  renderFolder() {\n    const {notes} = this.state\n    return (\n      <>\n        <Route\n          exact\n          key=\"/\"\n          path=\"/\"\n          component={NoteList}\n        />\n        <Route\n          path=\"/note/:noteId\"\n          component={NoteNav}\n        />\n        <Route\n          path=\"/note/:noteId\"\n          component={PageMain}\n        />\n        <Route\n          exact\n          key=\"/folder/:folderId\"\n          path=\"/folder/:folderId\"\n          component={NoteList}\n        />\n        <Route path=\"/add-folder\"  \n          component={NoteNav}\n        />\n        <Route \n          path=\"/add-note\"    \n          render={props =>   \n            <NoteNav {...props} \n            notes={notes} />\n          }\n        /> \n    </>\n  )\n}\n  renderFolderRoutes() {\n    return (\n      <>\n      <Route\n        exact key= \"/folder/:folderId\"\n        path=\"/folder/:folderId\"\n        component={Note}\n      />\n      <Route\n        key= \"/\"\n        exact path=\"/\"\n        component={Note}\n      />\n      <Route\n        path='/add-folder'\n        render={props=>\n          <AddFolderError>\n            <AddFolder {...props}\n              folderSubmit={this.folderSubmit}\n              newFolder={this.newFolder}\n              folder={this.state.folder}\n              nameError={this.state.nameError}\n            />\n          </AddFolderError>\n        }\n      />\n      <Route\n        path='/add-note'\n        render={ props => \n            <AddNote {...props} \n              handleSubmit={this.handleSubmit}\n              onContentChange={this.onContentChange}\n              name={this.state.name}\n              onNameChange={this.onNameChange}\n              content={this.state.content}\n              folder={this.state.folderId}\n              onfolderChange={this.onfolderChange}\n              nameError={this.state.nameError}\n              \n            />\n\n        }\n      />\n\n    </>\n    )\n  }\n  //second render\n\n  render() {\n    // final main render to bring it all together now\n      const value = {\n        notes: this.state.notes, \n        folders: this.state.folders, \n        deleteNote: this.handleDeleteNote\n      };\n    return (\n      <ApiContext.Provider \n      value={value}>\n        <div className=\"body\">\n        <header>\n          <h1>\n            <Link to=\"/\" className=\"link\" to=\"/\">\n              {\" \"}\n              Noteful\n            </Link>\n          </h1>\n        </header>\n        {/* folder Routes - folders */}\n        <div className=\"main\">\n          {/* LEFT NAVIGATION : FOLDERS */}\n          {this.renderFolder()}\n           {/* RIGHT NOTES & FOLDERS NAVIGATION */}\n          {this.renderFolderRoutes()}\n          \n        </div>\n        {/* Render Notes */}\n      </div>\n      </ApiContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}